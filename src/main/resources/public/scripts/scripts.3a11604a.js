"use strict";angular.module("botanicApp",["ngAnimate","ngCookies","ngResource","ui.router","ngSanitize","ngTouch","google-maps","angularFileUpload","wu.masonry"]).constant("appConfiguration",{botanicApiUrl:window.location.protocol+"//"+window.location.host+"/api",xAuthTokenHeaderName:"x-auth-token"}).run(["$rootScope","$state","$stateParams",function(a,b,c){a.$state=b,a.$stateParams=c}]).config(["$httpProvider",function(a){var b=["$rootScope","$q","$location",function(a,b,c){function d(a){return a}function e(d){var e=d.status,f=d.config,g=f.method,h=f.url;return 401===e?c.path("/login"):a.error=g+" on "+h+" failed with status "+e,b.reject(d)}return function(a){return a.then(d,e)}}];a.responseInterceptors.push(b)}]).run(["$rootScope","$http","$state","$cookieStore","appConfiguration","$log",function(a,b,c,d,e,f){a.$on("$viewContentLoaded",function(){delete a.error}),a.$on("$stateChangeStart",function(b,d){void 0!==d.data&&void 0!==d.data.authenticate&&(f.info("Need to authenticate",d),f.info("User authenticated?",a.isAuthenticated()),d.data.authenticate&&!a.isAuthenticated()&&(f.info("Setting desired state to "+d.name),a.desiredToState=d.name,c.transitionTo("login"),b.preventDefault()))}),a.isAuthenticated=function(){return void 0===a.user?!1:void 0===a.user.isAuthenticated?!1:a.user.isAuthenticated?!0:!1},a.hasRole=function(b){return a.isAuthenticated()?void 0===a.user.roles[b]?!1:a.user.roles[b]:!1}}]),angular.module("botanicApp").config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/plants"),a.state("plants",{"abstract":"true",template:"<ui-view/>"}).state("plants.viewAll",{url:"/plants",controller:"PlantController",templateUrl:"views/plants.html"}).state("plants.addPlant",{url:"/plants/add",controller:"AddPlantController",templateUrl:"views/add-plant.html",data:{authenticate:!0}}).state("plants.plantDetails",{url:"/plants/{plantId}",controller:"PlantDetailsController",templateUrl:"views/plant-details.html"}).state("garden",{url:"/garden",controller:"GardenController",templateUrl:"views/garden.html"}).state("login",{url:"/login",controller:"LoginController",templateUrl:"views/login.html"}).state("logout",{url:"/logout",controller:"LogoutController"}).state("about",{url:"/about",templateUrl:"views/about.html"})}]),angular.module("botanicApp").directive("ngThumb",["$window",function(a){var b={support:!(!a.FileReader||!a.CanvasRenderingContext2D),isFile:function(b){return angular.isObject(b)&&b instanceof a.File},isImage:function(a){var b="|"+a.type.slice(a.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(b)}};return{restrict:"A",template:"<canvas/>",link:function(a,c,d){function e(a){var b=new Image;b.onload=function(){f(b,g,h)},b.src=a.target.result}function f(a,b,c){var d=b.width||a.width/a.height*b.height,e=b.height||a.height/a.width*b.width;c.attr({width:d,height:e}),c[0].getContext("2d").drawImage(a,0,0,d,e)}if(b.support){var g=a.$eval(d.ngThumb);if(b.isFile(g.file)&&b.isImage(g.file)){var h=c.find("canvas"),i=new FileReader;i.onload=e,i.readAsDataURL(g.file)}}}}}]),angular.module("botanicApp").controller("PlantController",["$scope","$log","$http","$state","appConfiguration",function(a,b,c,d,e){a.addPlant=function(){b.info(d),b.info(d.includes("plants")),d.go("plants.addPlant")},a.viewPlantDetails=function(a){b.info("Show details for plant with Id: "+a.id),d.go("plants.plantDetails",{plantId:a.id})},a.deletePlant=function(d){b.info("Deleting plant with Id: "+d.id),c.delete(e.botanicApiUrl+"/plants/"+d.id).then(function(){a.loadPlants()})},a.loadPlants=function(){var d=c.get(e.botanicApiUrl+"/plants");d.then(function(c){b.info("Retrieved plants",c),c.data._embedded&&(a.plants=c.data._embedded.plants)})},a.loadPlants()}]).controller("AddPlantController",["$scope","$state","$log","$http","appConfiguration",function(a,b,c,d,e){a.map={center:{latitude:33.7489954,longitude:-84.3879824},zoom:12,events:{tilesloaded:function(a,b,d){c.log("Map has loaded: "+b,a,d)},click:function(b,d,e){c.log("user defined event: "+d,b,e);var f=e[0],g=f.latLng.lat(),h=f.latLng.lng();a.map.clickedMarker={id:0,title:"You clicked here lat: "+g+" lon: "+h,latitude:g,longitude:h},a.plant.location.latitude=g,a.plant.location.longitude=h,a.$apply()}}},a.plant={genus:"",species:"",commonName:"",location:{latitude:0,longitude:0}},a.goBack=function(){b.go("plants.viewAll")},a.getMyLocation=function(){c.info("Retrieving Location Information"),navigator.geolocation.getCurrentPosition(function(b){c.info("Location data retrieved",b);var d=b.coords;a.$apply(function(){a.plant.location.latitude=d.latitude,a.plant.location.longitude=d.longitude})})},a.submitPlant=function(){c.info("Adding New Plant",a.plant);var f=d.post(e.botanicApiUrl+"/plants",a.plant);f.then(function(a){c.info(a),b.go("plants.viewAll")})},a.$watch("plant.location",function(){a.plant.location.latitude&&a.plant.location.longitude&&(a.map.center.latitude=a.plant.location.latitude,a.map.center.longitude=a.plant.location.longitude)},!0)}]),angular.module("botanicApp").controller("PlantDetailsController",["$scope","$state","$stateParams","$http","$log","appConfiguration","FileUploader",function(a,b,c,d,e,f,g){var h=c.plantId,i=d.get(f.botanicApiUrl+"/plants/"+h),j=d.get(f.botanicApiUrl+"/plants/"+h+"/images");a.plant={species:"",genus:"",location:{latitude:0,longitude:0}},i.then(function(b){e.info(b),a.plant=b.data,a.map={center:{latitude:a.plant.location.latitude,longitude:a.plant.location.longitude},zoom:12},e.info("Map Data",a.Map)}),j.then(function(b){e.info(b),b.data._embedded&&(a.images=b.data._embedded.images)}),a.goBack=function(){b.go("plants.viewAll")},a.map={center:{latitude:45,longitude:-73},zoom:12};var k=a.uploader=new g({url:"upload/plants/"+h});k.filters.push({name:"imageFilter",fn:function(a,b){console.log("options",b);var c="|"+a.type.slice(a.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(c)}}),k.onWhenAddingFileFailed=function(a,b,c){console.info("onWhenAddingFileFailed",a,b,c)},k.onAfterAddingFile=function(a){console.info("onAfterAddingFile",a)},k.onAfterAddingAll=function(a){console.info("onAfterAddingAll",a)},k.onBeforeUploadItem=function(a){console.info("onBeforeUploadItem",a)},k.onProgressItem=function(a,b){console.info("onProgressItem",a,b)},k.onProgressAll=function(a){console.info("onProgressAll",a)},k.onSuccessItem=function(b,c,d,e){console.info("onSuccessItem",b,c,d,e),"undefined"==typeof a.images&&(a.images=[]),a.images.push(c)},k.onErrorItem=function(a,b,c,d){console.info("onErrorItem",a,b,c,d)},k.onCancelItem=function(a,b,c,d){console.info("onCancelItem",a,b,c,d)},k.onCompleteItem=function(a,b,c,d){console.info("onCompleteItem",a,b,c,d)},k.onCompleteAll=function(){console.info("onCompleteAll")},console.info("uploader",k)}]),angular.module("botanicApp").controller("GardenController",["$scope",function(a){a.images=[];var b=new SockJS("/websocketbroker"),c=Stomp.over(b);c.debug=function(){},c.connect({},function(b){console.log("Connected...",b),c.subscribe("/queue/pictures",function(b){var c=JSON.parse(b.body);console.log("Receiving Garden Picture",c.name),console.log(a.images.length),0===a.images.length&&(a.images=[]),a.images.length>4&&a.images.shift(),a.images.push(c),a.$apply()})},function(a){console.log("STOMP protocol error",a)})}]),angular.module("botanicApp").controller("AboutController",["$scope",function(a){a.message="Spring Rocks"}]),angular.module("botanicApp").controller("LoginController",["$log","$scope","$rootScope","$state","$http","$cookieStore","LoginService","appConfiguration",function(a,b,c,d,e,f,g,h){b.login=function(){a.info("Logging in...",b.user),g.authenticate(b.user,function(b){a.info("got user:",b),c.user=b,c.user.isAuthenticated=!0,e.defaults.headers.common[h.xAuthTokenHeaderName]=b.token,void 0!==c.desiredToState?(d.go(c.desiredToState),c.desiredToState=void 0):d.go("plants.viewAll")})}}]).controller("LogoutController",["$log","$rootScope","$http","$cookieStore","appConfiguration","$state",function(a,b,c,d,e,f){a.info("Logging out..."),delete b.user,delete c.defaults.headers.common[e.xAuthTokenHeaderName],d.remove("user"),f.go("plants.viewAll")}]),angular.module("botanicApp").factory("LoginService",["$resource",function(a){return a(":action",{},{authenticate:{method:"POST",params:{action:"authenticate"}}})}]);